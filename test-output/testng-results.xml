<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="32335" started-at="2020-06-17T01:58:33Z" finished-at="2020-06-17T01:59:06Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="32335" started-at="2020-06-17T01:58:33Z" finished-at="2020-06-17T01:59:06Z">
      <class name="testUnit.LogInValidationTest">
        <test-method status="PASS" signature="setExtent()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="setExtent" is-config="true" duration-ms="149" started-at="2020-06-17T01:58:33Z" finished-at="2020-06-17T01:58:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method status="PASS" signature="reading_PropertyFile()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="reading_PropertyFile" is-config="true" duration-ms="28" started-at="2020-06-17T01:58:33Z" finished-at="2020-06-17T01:58:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reading_PropertyFile -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="setUp" is-config="true" duration-ms="1723" started-at="2020-06-17T01:58:33Z" finished-at="2020-06-17T01:58:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:36Z" finished-at="2020-06-17T01:58:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="FAIL" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2765" started-at="2020-06-17T01:58:36Z" data-provider="getTestData" finished-at="2020-06-17T01:58:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotVisibleException">
            <message>
              <![CDATA[element not visible
  (Session info: chrome=83.0.4103.106)
  (Driver info: chromedriver=2.35.528157 (4429ca2590d6988c0745c24c8858745aaaec01ef),platform=Mac OS X 10.14.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Mds-MacBook-Pro.home', ip: 'fe80:0:0:0:1874:8bbc:11df:1ffa%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_211'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.35.528157 (4429ca2590d698..., userDataDir: /var/folders/j0/66hklvc12yv...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 83.0.4103.106, webStorageEnabled: true}
Session ID: b3e2ea28d5f369247c52377f58d7f547]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotVisibleException: element not visible
  (Session info: chrome=83.0.4103.106)
  (Driver info: chromedriver=2.35.528157 (4429ca2590d6988c0745c24c8858745aaaec01ef),platform=Mac OS X 10.14.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Mds-MacBook-Pro.home', ip: 'fe80:0:0:0:1874:8bbc:11df:1ffa%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_211'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.35.528157 (4429ca2590d698..., userDataDir: /var/folders/j0/66hklvc12yv...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 83.0.4103.106, webStorageEnabled: true}
Session ID: b3e2ea28d5f369247c52377f58d7f547
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:100)
at testUnit.LogInValidationTest.LogInTest(LogInValidationTest.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotVisibleException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="685" started-at="2020-06-17T01:58:38Z" finished-at="2020-06-17T01:58:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=FAILURE method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2208" started-at="2020-06-17T01:58:39Z" data-provider="getTestData" finished-at="2020-06-17T01:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="0" started-at="2020-06-17T01:58:39Z" finished-at="2020-06-17T01:58:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:41Z" finished-at="2020-06-17T01:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="0" started-at="2020-06-17T01:58:41Z" finished-at="2020-06-17T01:58:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2615" started-at="2020-06-17T01:58:41Z" data-provider="getTestData" finished-at="2020-06-17T01:58:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-06-17T01:58:44Z" finished-at="2020-06-17T01:58:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:44Z" finished-at="2020-06-17T01:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2606" started-at="2020-06-17T01:58:44Z" data-provider="getTestData" finished-at="2020-06-17T01:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:47Z" finished-at="2020-06-17T01:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="0" started-at="2020-06-17T01:58:47Z" finished-at="2020-06-17T01:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2769" started-at="2020-06-17T01:58:47Z" data-provider="getTestData" finished-at="2020-06-17T01:58:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:49Z" finished-at="2020-06-17T01:58:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="0" started-at="2020-06-17T01:58:49Z" finished-at="2020-06-17T01:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2899" started-at="2020-06-17T01:58:49Z" data-provider="getTestData" finished-at="2020-06-17T01:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:52Z" finished-at="2020-06-17T01:58:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="0" started-at="2020-06-17T01:58:52Z" finished-at="2020-06-17T01:58:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2413" started-at="2020-06-17T01:58:52Z" data-provider="getTestData" finished-at="2020-06-17T01:58:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:55Z" finished-at="2020-06-17T01:58:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="1" started-at="2020-06-17T01:58:55Z" finished-at="2020-06-17T01:58:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2517" started-at="2020-06-17T01:58:55Z" data-provider="getTestData" finished-at="2020-06-17T01:58:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="2" started-at="2020-06-17T01:58:57Z" finished-at="2020-06-17T01:58:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="0" started-at="2020-06-17T01:58:57Z" finished-at="2020-06-17T01:58:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2893" started-at="2020-06-17T01:58:57Z" data-provider="getTestData" finished-at="2020-06-17T01:59:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="11" started-at="2020-06-17T01:59:00Z" finished-at="2020-06-17T01:59:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="LogInTest" duration-ms="2400" started-at="2020-06-17T01:59:00Z" data-provider="getTestData" finished-at="2020-06-17T01:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInTest -->
        <test-method status="PASS" signature="getWebSite()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="getWebSite" is-config="true" duration-ms="0" started-at="2020-06-17T01:59:00Z" finished-at="2020-06-17T01:59:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebSite -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-06-17T01:59:03Z" finished-at="2020-06-17T01:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogInTest status=SUCCESS method=LogInValidationTest.LogInTest(java.lang.String, java.lang.String)[pri:0, instance:testUnit.LogInValidationTest@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testDown()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="testDown" is-config="true" duration-ms="3135" started-at="2020-06-17T01:59:03Z" finished-at="2020-06-17T01:59:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testUnit.LogInValidationTest@e25b2fe]" name="endReport" is-config="true" duration-ms="327" started-at="2020-06-17T01:59:06Z" finished-at="2020-06-17T01:59:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testUnit.LogInValidationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
